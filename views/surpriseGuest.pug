extends layout

mixin getActions(step)
  if step[0].item
    td
      .row.justify-content-center
        if step[0].item instanceof Array
          - var items = step[0].item;
        else
          - var items = [step[0].item];
        each item in items
          img.gift(src='/images/items/'+item+'.png' alt=item)
  else
    - let options = '';
    each action, i in step
      if i > 0
        - options += "<br>";
      - option = action.action + (action.part ? ' ' + action.part : '');
      - options += t(option);
    td.py-1.p-sm-3.px-0!= options

mixin getConditionImage(condition)
  if condition == 'Homescreen'
    img.img-fluid(src='/images/blob.png' style='max-height:1.5em' alt=condition)
  else if condition == '3 stars'
    img.img-fluid(src='/images/battle_star.png' style='max-height:1.5em' alt=condition)
    img.img-fluid.mx-1(src='/images/battle_star.png' style='max-height:1.5em' alt=condition)
    img.img-fluid(src='/images/battle_star.png' style='max-height:1.5em' alt=condition)
  else if condition == '1 or 2 stars'
    img.img-fluid(src='/images/battle_star.png' style='max-height:1.5em' alt=condition)
  else
    | #{condition}

block scripts
  link(rel="canonical" href="https://" + (t("lang") === "en" ? "" : t("lang") + '.') + "karasu-os.com/SurpriseGuest")
  link(rel="stylesheet" href="/stylesheets/spg.css")
  script(src="/javascripts/surpriseGuestFunctions.js")

block content
  .container
    h1= title
    //- settings
    .card.card-body.pb-2.pt-3.mb-3
      .lineHeader.h5.text-primary.mb-0= t("common.settings")
      #settings.mx-auto.collapse
        .custom-control.custom-radio.custom-control-inline
          input.custom-control-input(type="radio" id="shortActions" name="optionsSwitch")
          label.custom-control-label(for="shortActions")= t("spg.shortActions")
        .custom-control.custom-radio.custom-control-inline
          input.custom-control-input(type="radio" id="allActions" name="optionsSwitch")
          label.custom-control-label(for="allActions")= t("spg.allActions")
        .custom-control.custom-checkbox.mt-2.mb-1.text-lg-center
          input.custom-control-input(type="checkbox" id="useItems")
          label.custom-control-label(for="useItems")= t("spg.use_item")
      a(class="text-center text-secondary collapser" id="settingsCollapser" data-toggle="collapse" href="#settings" role="button" aria-expanded="false" aria-controls="settings")
        |
        |
        <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-chevron-up chevron" fill="currentColor" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"/></svg>

    //- content
    .card.card-body
      .row
        //- nav
        .col-3.d-none.d-lg-block
          .nav.flex-column.nav-pills.mb-2.big-nav(role='tablist' aria-orientation="vertical")
            each interaction in interactions
              a.px-1.px-sm-2.px-lg-3(class='nav-item nav-link' id=interaction.chara+'Pill' data-toggle='pill' href='#'+interaction.chara role='tab' aria-controls=interaction.chara)
                img.img-fluid.mx-1(src=`/images/faces/${interaction.chara}.png` style='width:30px;' alt=interaction.chara)
                | #{t(interaction.chara)}
        .col-12.d-lg-none.mb-3
          .nav.nav-pills.justify-content-center.small-nav(role='tablist')
            each interaction in interactions
              a.p-1.mx-1.small-pill(class='nav-item nav-link' id=interaction.chara+'PillSmall' data-toggle='pill' href='#'+interaction.chara role='tab' aria-controls=interaction.chara)
                img.img-fluid(src=`/images/faces/${interaction.chara}.png` style='width:40px;' alt=interaction.chara)

        //- table
        .col-12.col-lg-9
          .tab-content
            each interaction in interactions
              div(class="tab-pane fade" id=interaction.chara role='tabpanel' aria-labelledby=interaction.chara+'Pill')
                each meet in interaction.interactions
                  table.table
                    thead
                      tr
                        th.bg-secondary.text-white.py-2.py-lg-3.rounded(colspan='4')
                          .row.w-100.align-items-center.mx-0
                            .col-12.mb-1.mt-0.d-flex.justify-content-center.d-lg-none
                              +getConditionImage(meet.condition)
                            h5.col-12.col-lg-10.text-center.text-lg-left.px-0.mb-0!= meet.phrase[t("lang")]
                            .col-2.px-0.mb-0.d-none.d-lg-flex.justify-content-end
                              +getConditionImage(meet.condition)
                    tbody
                      tr.text-primary.action
                        each i in [1, 2, 3]
                          th.h6.px-0.px-sm-3= t("Action "+i)
                        th.h6.px-0.px-sm-3= t("Points")
                      tr.text-dark.moves
                        each step in ['first', 'second', 'third']
                          +getActions(meet.allInteractions[step])
                        td +#{meet.allInteractions.points}
                      tr.text-dark.movesShort
                        each step in ['first', 'second', 'third']
                          +getActions([meet.allInteractionsShort[step]])
                        td +#{meet.allInteractionsShort.points}
                      if meet.itemInteractions
                        tr.text-dark.items
                          each step in ['first', 'second', 'third']
                            +getActions(meet.itemInteractions[step])
                          td +#{meet.itemInteractions.points}
                      if meet.itemInteractionsShort
                        tr.text-dark.itemsShort
                          each step in ['first', 'second', 'third']
                            +getActions([meet.itemInteractionsShort[step]])
                          td +#{meet.itemInteractionsShort.points}
  -
    let dict = {};
    ALL_CHARACTERS.forEach(x => {
      dict[x] = t(x);
    });
  script.
    function updateTitle(character) {
      let dict = !{JSON.stringify(dict)};
      document.title = dict[character] + "#{t("de")}#{t("common.spg")}#{t("header")}";
      $("h1").text(dict[character] + "#{t("de")}#{t("common.spg")}");
      window.history.replaceState(null, null, `/${window.location.pathname.split("/")[1]}/${character}`);
    };
