extends layout

mixin percentBar(owned, total, name)
  - const colours = {Lucifer:"#64B5F6", Mammon:"#FFF176", Leviathan:"#FF8A65", Satan:"#AED581", Asmodeus:"#F06292", Beelzebub:"#EF5350", Belphegor:"#9575CD", Diavolo:"#D32F2F", Barbatos:"#00BFA5", Luke:"#FDD835", Simeon:"#26C6DA", Solomon:"#BDBDBD", "Little D":"#1c1c1c", N:"#d1d1d1", R:"#ed86ac", SR:"#aea4e8", SSR:"#ffe16b", UR:"#ffe16b", URp:"#ffe16b"};
  - function roundPercentage(percentage) {if (percentage >= 1 && percentage <= 99) { percentage = Math.round(percentage); } else { percentage = +percentage.toFixed(2); } return percentage;}
  - var percentage = roundPercentage(owned / total * 100);
  span= name
  small(style='display:inline-flex;') &nbsp;- #{owned} of #{total} (#{percentage}%)
    if percentage >= 100
      | &nbsp;
      img(src='/images/completion_star.png' style='height: 1.5em; width: auto;')
  div.progress.mb-1
    div(id="bar"+name.replace('+', 'p') class="progress-bar" role="progressbar" style={width: percentage + '%', background: colours[name.replace('+', 'p')]} aria-valuenow=percentage aria-valuemin="0" aria-valuemax="100")
      if name==='UR+'
        div(id='barAnimated')
          div(id="barCover"+name.replace('+', 'p') style={width: (100 - percentage) + '%'})
      if name==='UR'
        div(id="barCover"+name.replace('+', 'p') style={width: (100 - percentage) + '%'})

block scripts
  link(rel="stylesheet" href="/stylesheets/cardsListStyle.css")
  script(src="/javascripts/cardsListFunctions.js")

block content
  div(id="successAlert" class="alert alert-success" role="alert" style="position: fixed; z-index: 2; right: 20px; display: none; top: -100px") Collection modified successfully
  div(id="failAlert" class="alert alert-danger" role="alert" style="position: fixed; z-index: 2; right: 20px; display: none; top: -100px") Something went wrong, please reload the page

  //- share collection
  div(class="modal fade" id="openLink" tabindex="-1" role="dialog" aria-labelledby="openShareLink" aria-hidden="true")
    div(class="modal-dialog modal-lg" role="document")
      div(class="modal-content")
        div(class="modal-header")
          h5(class="modal-title text-primary" id="openShareLink") Share
          button(type="button" class="close" data-dismiss="modal" aria-label="Close")
            span(aria-hidden="true") &times;
        div(class="modal-body mb-2")
          div.input-group
            input(type="text" id="userLink" class="form-control" aria-label="user's collection link" aria-describedby="user link")
            div.input-group-append
              button#copyLink.btn.btn-primary.rounded Copy
          div.text-center.text-secondary.mt-2 Stats image to copy and share
          div(class='d-flex justify-content-center align-items-center mt-3' id='statsImageContainer')
            div(id='statsSpinner' class="spinner-border text-secondary" role="status" style='display: none')
            img(id='statsImage' class='img-fluid')
            div(id='statsMessage')

  div(class="container")
    h1= title

    //- Collection Stats
    if path === "collection"
      - function roundPercentage(percentage) {if (percentage >= 1 && percentage <= 99) { percentage = Math.round(percentage); } else { percentage = +percentage.toFixed(2); } return percentage;}
      div.card.shadow.mb-3(id='statsCard')
        div.card-body
          div.row
            div.col-12.col-lg-4.container.text-center(id='statsTotal')
              div.row.px-4.h-100.align-items-center.d-flex
                div.col-6.d-flex.flex-column.justify-content-center.h-100
                  div.d-flex.align-items-center.justify-content-center.cardTextWrapper
                    div.lead.text-primary.d-none.d-sm-block Demon cards
                    div.text-primary.d-block.d-sm-none Demon cards
                  - var demonPercentage = roundPercentage(cardStats.cards.Demon[0] / cardStats.cards.Demon[1] * 100);
                  div(style='position: relative')
                    img.img-fluid.p-2.mx-auto(src='/images/demon_card.png' style='max-width: 120px; width:100%;')
                    div.mt-2(style={position: 'absolute', top: '0%', left: '0%', height: 100 - demonPercentage + '%', width: '100%', background: 'white', 'mix-blend-mode': 'saturation'})
                  div.d-none.d-sm-block #{cardStats.cards.Demon[0]} of #{cardStats.cards.Demon[1]}
                  small.d-block.d-sm-none #{cardStats.cards.Demon[0]} of #{cardStats.cards.Demon[1]}
                  small.text-muted #{demonPercentage}%
                div.col-6.d-flex.flex-column.justify-content-center.h-100
                  div.d-flex.align-items-center.justify-content-center.cardTextWrapper
                    div.lead.text-primary.d-none.d-sm-block Memory cards
                    div.text-primary.d-block.d-sm-none Memory cards
                  - var memoryPercentage = roundPercentage(cardStats.cards.Memory[0] / cardStats.cards.Memory[1] * 100);
                  div(style='position: relative')
                    img.img-fluid.p-2.mx-auto(src='/images/memory_card.png' style='max-width: 120px; width:100%;')
                    div.mt-2(style={position: 'absolute', top: '0%', left: '0%', height: 100 - memoryPercentage + '%', width: '100%', background: 'white', 'mix-blend-mode': 'saturation'})
                  div.d-none.d-sm-block #{cardStats.cards.Memory[0]} of #{cardStats.cards.Memory[1]}
                  small.d-block.d-sm-none #{cardStats.cards.Memory[0]} of #{cardStats.cards.Memory[1]}
                  small.text-muted #{memoryPercentage}%
            div.col-12.col-lg-8.mt-3.mt-lg-0
              nav
                div.nav.nav-pills(id='statsNavTab' role='tablist')
                  a.nav-item.nav-link.active(id='charNavTab' data-toggle='tab' href='#charNav' role='tab' aria-controls="charNav" aria-selected="true") Characters
                  a.nav-item.nav-link(id='sideCharNavTab' data-toggle='tab' href='#sideCharNav' role='tab' aria-controls="sideCharNav" aria-selected="true") Side characters
                  a.nav-item.nav-link(id='rarityNavTab' data-toggle='tab' href='#rarityNav' role='tab' aria-controls="rarityNav" aria-selected="true") Rarity
                  if title === "My Collection"
                    span.text-right.ml-auto.mr-auto.mr-md-0
                      button(type="button" id="shareCollection" class="btn btn-primary" data-toggle="modal" data-target="#openLink")
                        div(style='white-space: nowrap;')
                          <svg width="1em" height="1.5em" viewBox="0 0 16 16" class="bi bi-share pb-1" fill="currentColor" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M13.5 1a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3zM11 2.5a2.5 2.5 0 1 1 .603 1.628l-6.718 3.12a2.499 2.499 0 0 1 0 1.504l6.718 3.12a2.5 2.5 0 1 1-.488.876l-6.718-3.12a2.5 2.5 0 1 1 0-3.256l6.718-3.12A2.5 2.5 0 0 1 11 2.5zm-8.5 4a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3zm11 5.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3z"/></svg>
                          |
                          | Share
              div.tab-content.mt-1.mt-sm-2(id='statsNavContent')
                div.container.tab-pane.fade.px-0.show.active(id='charNav' role='tabpanel' aria-labelledby='charNavTab')
                  div.row
                    div.col-md-6
                      +percentBar(cardStats.characters.Lucifer[0], cardStats.characters.Lucifer[1], "Lucifer")
                      +percentBar(cardStats.characters.Mammon[0], cardStats.characters.Mammon[1], "Mammon")
                      +percentBar(cardStats.characters.Leviathan[0], cardStats.characters.Leviathan[1], "Leviathan")
                      +percentBar(cardStats.characters.Satan[0], cardStats.characters.Satan[1], "Satan")
                    div.col-md-6
                      +percentBar(cardStats.characters.Asmodeus[0], cardStats.characters.Asmodeus[1], "Asmodeus")
                      +percentBar(cardStats.characters.Beelzebub[0], cardStats.characters.Beelzebub[1], "Beelzebub")
                      +percentBar(cardStats.characters.Belphegor[0], cardStats.characters.Belphegor[1], "Belphegor")
                div.container.tab-pane.fade.px-0(id='sideCharNav' role='tabpanel' aria-labelledby='sideCharNavTab')
                  div.row
                    div.col-md-6
                      +percentBar(cardStats.characters.Diavolo[0], cardStats.characters.Diavolo[1], "Diavolo")
                      +percentBar(cardStats.characters.Barbatos[0], cardStats.characters.Barbatos[1], "Barbatos")
                      +percentBar(cardStats.characters.Luke[0], cardStats.characters.Luke[1], "Luke")
                      +percentBar(cardStats.characters.Simeon[0], cardStats.characters.Simeon[1], "Simeon")
                    div.col-md-6
                      +percentBar(cardStats.characters.Solomon[0], cardStats.characters.Solomon[1], "Solomon")
                      +percentBar(cardStats.characters["Little D"][0], cardStats.characters["Little D"][1], "Little D")
                div.container.tab-pane.fade.px-0(id='rarityNav' role='tabpanel' aria-labelledby='rarityNavTab')
                  div.row
                    div.col-md-6
                      +percentBar(cardStats.rarity.N[0], cardStats.rarity.N[1], "N")
                      +percentBar(cardStats.rarity.R[0], cardStats.rarity.R[1], "R")
                      +percentBar(cardStats.rarity.SR[0], cardStats.rarity.SR[1], "SR")
                      +percentBar(cardStats.rarity.SSR[0], cardStats.rarity.SSR[1], "SSR")
                    div.col-md-6
                      +percentBar(cardStats.rarity.UR[0], cardStats.rarity.UR[1], "UR")
                      +percentBar(cardStats.rarity.URp[0], cardStats.rarity.URp[1], "UR+")
              div.small.text-muted.mt-3 Percentage is calculated based on the entire collection (both demon and memory cards).

    //- Card Navigation
    div(class="card sticky-top sticky-offset mb-3 shadow")
      div(class="card-body d-flex justify-content-around flex-wrap p-3" id="actionButtons")
        div(class="d-flex" + (user && path === "list" ? "  mb-2 mb-lg-0 mr-lg-auto" : ""))
          button(class="btn btn-md text-secondary py-0 mb-0" id="gotoDemon" href="#demonCards")
            span(class="d-none d-sm-block") Go to Demon Cards
            span(class="d-sm-none") Demon
          div(style="border-left: 3px solid; border-color: #db9efb; opacity: 50%; border-radius: 1rem")
          button(class="btn btn-md text-secondary py-0 mb-0" id="gotoMemory" href="#memoryCards")
            span(class="d-none d-sm-block") Go to Memory Cards
            span(class="d-sm-none") Memory
        div(class='d-lg-none' style='flex-basis: 100%; height: 0;')
        div(class="btn-group d-none mr-2" id="selectionButtons")
          button(class="btn btn-secondary mb-md-0" id="deselectAll") Deselect all
          button(class="btn btn-secondary mb-md-0" id="selectAll") Select all
        div(class="btn-group d-none" id="manageButtons")
          button(class="btn btn-primary mb-md-0" id="cancelManaging") Cancel
          button(class="btn btn-primary mb-md-0" id="saveManaging") Save
        if user && path === "list"
            button(class="btn btn-primary btn-md mb-0" id="manageCollection") Manage Collection

    div(id="searchBar" class="row text-left mb-3")
      div(class="col-12")
        div(class="card shadow")
          div(class="card-body d-flex flex-wrap justify-content-around p-3")
            div(class="dropdown text-center")
              button(class="btn dropdown-toggle text-secondary mb-0" type="button" id="viewMenuDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false")
                span Icon view
              div(class="dropdown-menu shadow" aria-labelledby="viewMenuDropdown")
                a(id="iconViewBtn" class="dropdown-item viewBtn iconViewBtn" role='button' data-viewmode="icon")
                  span.font-weight-bold.text-primary Icon view
                div(class="dropdown-divider")
                a(id="originalViewBtn" class="dropdown-item viewBtn originalViewBtn" role='button' data-viewmode="original")
                  span.font-weight-normal Full original view
                a(id="bloomedViewBtn" class="dropdown-item viewBtn bloomedViewBtn" role='button' data-viewmode="bloomed")
                  span.font-weight-normal Full bloomed view
            form(id="searchForm" class="col-md-auto flex-grow-1 px-2 mb-3 mb-md-0")
              div(class="input-group rounded-pill" style="background-color:rgba(219,158,251,0.2)")
                div(class="input-group-text border-0 bg-transparent text-primary" style="z-index: 3;")
                  <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-search text-secondary" fill="currentColor" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z"/><path fill-rule="evenodd" d="M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z"/></svg>
                input(type="text" class="form-control text-primary bg-transparent pl-0" id="nameFilter" placeholder="Search for card name..." style = "border: 0px;")
            div(class="mx-auto text-center")
              span(class="mb-1 mb-md-0 d-flex d-sm-inline-flex")
                button(id="expandFilters" class="btn btn-secondary btn-sm rounded-pill mr-2 mb-0" data-toggle="collapse" href="#filters" role="button" aria-expanded="false" aria-controls="filters" style="width: 104px") Filters
                button(id="resetFilters" class="btn btn-primary btn-sm rounded-pill mb-0" style="width: 104px") Reset filters

    div(id="filters" class="row text-left collapse")
      div.col-12.col-md-6.pr-md-1.mb-2
        div(id="rarityFilter" class="card mb-2 shadow" style="border-left: 4px solid #8B9AF0;")
          div(class="card-header pb-0") Rarity
          div(class="card-body")
            form(id="rarityForm")
              div(class="container")
                div(class="row")
                  div(class="custom-control custom-radio mr-3 col-1")
                    input(type="radio" class="custom-control-input" id="checkRarityAll" name="All")
                    label(class="custom-control-label" for="checkRarityAll") All
                  - var rarities = ["N", "R", "SR", "SSR", "UR"]
                  each rarity in rarities
                    div(class="custom-control custom-checkbox mr-3 col-1")
                      input(type="checkbox" class="custom-control-input" id="checkRarity"+rarity name=rarity)
                      label(class="custom-control-label" for="checkRarity"+rarity) #{rarity}
                  div(class="custom-control custom-checkbox col-1")
                    input(type="checkbox" class="custom-control-input" id="checkRarityUR+" name="URp")
                    label(class="custom-control-label" for="checkRarityUR+") UR+
        div(id="attributeFilter" class="card shadow" style="border-left: 4px solid #F06292;")
          div(class="card-header pb-0") Attribute
          div(class="card-body")
            form(id="attributeForm")
              div(class="container")
                div(class="row")
                  div(class="custom-control custom-radio mr-5 ml-1 col-1")
                    input(type="radio" class="custom-control-input" id="checkAttributeAll" name="All")
                    label(class="custom-control-label" for="checkAttributeAll") All
                  - var attributes = ["Pride", "Greed", "Envy", "Wrath", "Lust", "Gluttony"]
                  each attribute in attributes
                    div(class="custom-control custom-checkbox mr-5 ml-1 col-1")
                      input(type="checkbox" class="custom-control-input" id="checkAttribute"+attribute name=attribute)
                      label(class="custom-control-label" for="checkAttribute"+attribute) #{attribute}
                  div(class="custom-control custom-checkbox ml-1 col-1")
                    input(type="checkbox" class="custom-control-input" id="checkAttributeSloth" name="Sloth")
                    label(class="custom-control-label" for="checkAttributeSloth") Sloth
      div.col-12.col-md-6.pl-md-1.mb-2
        div(id="characterFilter" class="card shadow h-100" style="border-left: 4px solid #C297EC;")
          div(class="card-header") Character
          div(class="card-body")
            form(id="characterForm")
              div(class="container pl-0")
                div(class="row")
                  div(class="custom-control custom-radio mr-5 ml-3 col-2")
                    input(type="radio" class="custom-control-input" id="checkCharacterAll" name="All")
                    label(class="custom-control-label" for="checkCharacterAll") All
                  - var characters = ["Lucifer", "Mammon", "Leviathan", "Satan", "Asmodeus", "Beelzebub", "Belphegor", "Diavolo", "Barbatos", "Simeon", "Luke", "Solomon"]
                  each character in characters
                    div(class="custom-control custom-checkbox mr-5 ml-3 col-2")
                      input(type="checkbox" class="custom-control-input" id="checkCharacter"+character name=character)
                      label(class="custom-control-label" for="checkCharacter"+character) #{character}
                  div(class="custom-control custom-checkbox mr-5 ml-3 col-2")
                    input(type="checkbox" class="custom-control-input" id="checkCharacterLittleD" name="LittleD")
                    label(class="custom-control-label" for="checkCharacterLittleD" style="min-width: 75px;") Little D

    div(class="row" id="demonCards")
      div(class="col-12")
        h3(class="text-dark collapser" data-toggle="collapse" href="#demonWrapper" role="button" aria-expanded="true" aria-controls="demonWrapper") Demon Cards
          |
          |
          <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-chevron-down chevron" fill="currentColor" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"/></svg>
    div(class='collapse show' id='demonWrapper')
      div(class="row d-flex justify-content-between mx-auto" id="demonSection" style="padding:0 8px;")
        if cardsList.filter(card => card.type == "Demon").length != 0
          each card in cardsList
            if card.type == "Demon"
              a(class="cardPreview icon-container "+card.rarity.replace("UR+", "URp")+" "+card.attribute+" "+card.characters.map(x => x.replace(" ", "")).join(" ") href= (path=="collection"?"../":"") + "card/"+card.uniqueName)
                img(class="lazy" loading="lazy" src="/images/cards/S/" + card.uniqueName + ".jpg")
                figcaption #{card.name}

    if (!user || !user.supportStatus.includes("adfree"))
      div.container.ad-container.text-center.my-3
        <ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-1710157662563352" data-ad-slot="7371452932" data-ad-format="auto" data-full-width-responsive="true"></ins>
        script.
          (adsbygoogle = window.adsbygoogle || []).push({});
        a(type="button" class="btn text-muted" data-toggle="modal" data-target="#removeAdsModal" style="display:none;") Remove Ads

    div(class="row" id="memoryCards")
      div(class="col-12")
        h3(class="text-dark collapser" data-toggle="collapse" href="#memoryWrapper" role="button" aria-expanded="true" aria-controls="memoryWrapper") Memory Cards
          |
          |
          <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-chevron-down chevron" fill="currentColor" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"/></svg>
    div(class='collapse show' id='memoryWrapper')
      div(class="row d-flex justify-content-between mx-auto" id="memorySection" style="padding:0 8px;")
        if cardsList.filter(card => card.type == "Memory").length != 0
          each card in cardsList
            if card.type == "Memory"
              a(class="cardPreview icon-container "+card.rarity.replace("UR+", "URp")+" "+card.attribute+" "+card.characters.map(x => x.replace(" ", "")).join(" ") href=(path=="collection"?"../":"") + "card/"+card.uniqueName)
                img(class="lazy" loading="lazy" src="/images/cards/S/" + card.uniqueName + ".jpg")
                figcaption #{card.name}
