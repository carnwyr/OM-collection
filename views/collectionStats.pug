-
  function roundPercentage(percentage) {
    if (percentage >= 1 && percentage <= 99) {
      percentage = Math.round(percentage);
    } else {
      percentage = +percentage.toFixed(2);
    }
    return percentage;
  }

mixin percentBar(owned, total, name)
  - const colours = {Lucifer:"#64B5F6", Mammon:"#FFF176", Leviathan:"#FF8A65", Satan:"#AED581", Asmodeus:"#F06292", Beelzebub:"#EF5350", Belphegor:"#9575CD", Diavolo:"#D32F2F", Barbatos:"#00BFA5", Luke:"#FDD835", Simeon:"#26C6DA", Solomon:"#BDBDBD", "Little D":"#1c1c1c", N:"#d1d1d1", R:"#ed86ac", SR:"#aea4e8", SSR:"#ffe16b", UR:"#ffe16b", 'UR+':"#ffe16b", Pride:"rgb(52,123,253)", Greed:"#ffbc11", Envy:"#ff7e00", Wrath:"#21c38c", Lust:"rgb(240,84,177)", Gluttony:"rgb(230,64,56)", Sloth:"rgb(181,65,230)"};
  - var percentage = roundPercentage(owned / total * 100);
  span= t(name)
  small(style='display:inline-flex;') &nbsp;- #{owned} of #{total} (#{percentage}%)
    if percentage >= 100
      | &nbsp;
      img(src='/images/completion_star.png' style='height: 1.5em; width: auto;')
  div.progress.mb-1
    div(id="bar"+name class="progress-bar" role="progressbar" style={width: percentage + '%', background: colours[name]} aria-valuenow=percentage aria-valuemin="0" aria-valuemax="100")
      if name==='UR+'
        div(id='barAnimated')
          div(id="barCoverURp" style={width: (100 - percentage) + '%'})
      if name==='UR'
        div(id="barCoverUR" style={width: (100 - percentage) + '%'})

mixin statsTab(entries, category)
  - const sliceInChunks = (array, chunk_size) => Array(Math.ceil(array.length / chunk_size)).fill().map((_, index) => index * chunk_size).map(begin => array.slice(begin, begin + chunk_size))
  - var entriesChunks = sliceInChunks(entries, 4)
  div.row
    each chunk in entriesChunks
      div.col-md-6
        each entry in chunk
          +percentBar(ownedStats[category][entry], totalStats[category][entry], entry)

div#statsCard.card.card-body.shadow.mb-3
  div.row.align-items-center
    //- mx-auto is needed for share stats image
    div#statsTotal.col-lg-4.row.text-center.mb-3.mb-lg-0.mx-auto
      div.col-6
        h5.text-primary.mb-0= t("cards.Demon")
        - var demonPercentage = roundPercentage(ownedStats.cards.Demon / totalStats.cards.Demon * 100);
        div(style="position:relative;")
          img.img-fluid.p-2(src="/images/demon_card.png" style="max-width:120px;width:100%;")
          div#demonblend
        p.mb-0 #{ownedStats.cards.Demon} of #{totalStats.cards.Demon}
        small.text-muted #{demonPercentage}%
      div.col-6
        h5.text-primary.mb-0= t("cards.Memory")
        - var memoryPercentage = roundPercentage(ownedStats.cards.Memory / totalStats.cards.Memory * 100);
        div(style="position:relative;")
          img.img-fluid.p-2(src="/images/memory_card.png" style="max-width:120px;width:100%;")
          div#memoryblend
        p.mb-0 #{ownedStats.cards.Memory} of #{totalStats.cards.Memory}
        small.text-muted #{memoryPercentage}%

    div.col-lg-8
      div.nav.nav-pills.mb-2(id='statsNavTab' role='tablist')
        a.nav-item.nav-link.active(id='charNavTab' data-toggle='tab' href='#charNav' role='tab' aria-controls="charNav" aria-selected="true")= t("profile.main_chara")
        a.nav-item.nav-link(id='sideCharNavTab' data-toggle='tab' href='#sideCharNav' role='tab' aria-controls="sideCharNav" aria-selected="true")= t("profile.side_chara")
        a.nav-item.nav-link(id='rarityNavTab' data-toggle='tab' href='#rarityNav' role='tab' aria-controls="rarityNav" aria-selected="true")= t("cards.rarity")
        a.nav-item.nav-link(id='attrNavTab' data-toggle='tab' href='#attributeNav' role='tab' aria-controls="attributeNav" aria-selected="true")= t("cards.attribute")
      div#statsNavContent.tab-content
        div.container.tab-pane.fade.px-0.show.active(id='charNav' role='tabpanel' aria-labelledby='charNavTab')
          - const mainCharas = ["Lucifer", "Mammon", "Leviathan", "Satan", "Asmodeus", "Beelzebub", "Belphegor"];
          +statsTab(mainCharas, "characters")
        div.container.tab-pane.fade.px-0(id='sideCharNav' role='tabpanel' aria-labelledby='sideCharNavTab')
          - const sideCharas = ["Diavolo", "Barbatos", "Luke", "Simeon", "Solomon", "Little D"];
          +statsTab(sideCharas, "characters")
        div.container.tab-pane.fade.px-0(id='rarityNav' role='tabpanel' aria-labelledby='rarityNavTab')
          - const rarities = ["N", "R", "SR", "SSR", "UR", "UR+"];
          +statsTab(rarities, "rarity")
        div.container.tab-pane.fade.px-0(id='attributeNav' role='tabpanel' aria-labelledby='attrNavTab')
          - const attributes = ["Pride", "Greed", "Envy", "Wrath", "Lust", "Gluttony", "Sloth"];
          +statsTab(attributes, "attribute")
      div.small.text-muted.mt-3= t("profile.percentage_calculation")

style.
  #demonblend, #memoryblend {
    position: absolute;
    top: calc(.5rem + 4px); /* adds padding to align with top of image */
    width: 100%;
    background-color: white;
    mix-blend-mode: saturation;
  }
  /**
   * first find element height without padding (100% - 1rem - 8px)
   * then, multiply by percentage missing to create the blend
   */
  #demonblend {
    height: calc((100% - 1rem - 8px) * #{(100 - demonPercentage)/100});
  }
  #memoryblend {
    height: calc((100% - 1rem - 8px) * #{(100 - memoryPercentage)/100});
  }

if title === t("title.my_collection")
  div(class="modal fade" id="openLink" tabindex="-1" role="dialog" aria-labelledby="openShareLink" aria-hidden="true")
    div(class="modal-dialog modal-lg" role="document")
      div(class="modal-content")
        div(class="modal-header")
          h5(class="modal-title text-primary" id="openShareLink")= t("profile.share")
          button(type="button" class="close" data-dismiss="modal" aria-label="Close")
            span(aria-hidden="true") &times;
        div(class="modal-body mb-2")
          div.input-group
            input(type="text" id="userLink" class="form-control" value=`https://karasu-os.com/${user.name}/collection` name="userlink" autocomplete="off" aria-label="user's collection link" aria-describedby="user link" readonly)
            div.input-group-append
              button#copyLink.btn.btn-primary(style="border-radius:0 4px 4px 0;")= t("profile.copy")
          div.text-center.text-secondary.mt-2 Stats image to copy and share
          div(class='d-flex justify-content-center align-items-center mt-3' id='statsImageContainer')
            div(id='statsSpinner' class="spinner-border text-secondary" role="status" style='display: none')
            img(id='statsImage' class='img-fluid')
            div(id='statsMessage')
